function [mDisp,scoreSurf,temp] = trackEval(mark,vidObj,frames,frameDex,varargin)
% TRACKEVAL Returns tracking result for a single frame
%
% [MDISP,SCORESURF,TEMP] = trackEval(MARK,VIDOBJ,FRAMES,FRAMEDEX,
%                                   PropertyName,PropertyValue)
% Computes data related to the a single frame of marker tracking.  MARK is
% a marker structure generated by detectTrackFun.  FRAMEDEX is the index
% into the sequence of which data is desired.  MDISP is the marker
% displacement between FRAMEDEX-1 and FRAMEDEX.  SCORESURF is the
% similarity surface used to find the new marker position in FRAMEDEX.


%% Input Arguments
% Default Arguments
update = 'Replace';
color = 0;
prediction = 'Constant Position';

if nargin > 4
    for k = 1:2:(numel(varargin)-1)
        pName = varargin{k};
        switch pName
            case 'Update'
                update = varargin{k+1};
            case 'Color'
                color = varargin{k+1};
            case 'Prediction'
                prediction = varargin{k+1};
        end
    end
end

%% Run Tracking on Single Frame
switch color
    case 0
        initFrame = rgb2gray(vidObj.read(frames(1)));
        nextFrame = rgb2gray(vidObj.read(frames(1)+(frameDex-1)));
    case 1
        initFrame = vidObj.read(frames(1));
        nextFrame = vidObj.read(frames(1)+(frameDex-1));
end

% Grab Template
temp = initFrame((0:mark.wStats.wSize-1) + mark.mCorn(1,2),...
                 (0:mark.wStats.wSize-1) + mark.mCorn(1,1),:);

nCurr = mark.nCorn(frameDex,:);
mPast = mark.mCorn(frameDex-1,:);

[mNext,~,~,scoreSurf] = ...
    findTempMatch(nextFrame,temp,mPast,nCurr,mark.wStats.nx,'ncc');

mDisp = mNext - mPast;